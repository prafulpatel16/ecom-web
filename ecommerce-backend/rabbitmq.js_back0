const amqp = require('amqplib');

let channel, connection;

const connectRabbitMQ = async () => {
  try {
    connection = await amqp.connect(process.env.RABBITMQ_URL);
    channel = await connection.createChannel();
    console.log('Connected to RabbitMQ');
  } catch (err) {
    console.error('Failed to connect to RabbitMQ:', err);
    throw err;
  }
};

const sendToQueue = async (queue, message) => {
  try {
    if (!channel) {
      throw new Error('Channel not initialized');
    }
    await channel.assertQueue(queue, { durable: true });
    channel.sendToQueue(queue, Buffer.from(message));
    console.log(`Message sent to queue ${queue}: ${message}`);
  } catch (err) {
    console.error('Failed to send message to queue:', err);
    throw err;
  }
};

const consumeFromQueue = async (queue, callback) => {
  try {
    if (!channel) {
      throw new Error('Channel not initialized');
    }
    await channel.assertQueue(queue, { durable: true });
    channel.consume(queue, (msg) => {
      if (msg !== null) {
        const message = msg.content.toString();
        callback(message);
        channel.ack(msg);
      }
    });
    console.log(`Consuming messages from queue ${queue}`);
  } catch (err) {
    console.error('Failed to consume message from queue:', err);
    throw err;
  }
};

module.exports = {
  connectRabbitMQ,
  sendToQueue,
  consumeFromQueue,
};
